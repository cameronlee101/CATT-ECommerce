import { NextRequest, NextResponse } from "next/server";
import pool from "@/lib/pool";

export async function PATCH(req: NextRequest) {
  try {
    const body = await req.json();
    let { user_email, street_name, city, province, post_code, country } = body;

    if (!user_email) {
      return NextResponse.json(
        { error: "Invalid user email!" },
        { status: 400 },
      );
    }
    user_email = user_email.trim();

    if (!street_name) {
      return NextResponse.json(
        { error: "Invalid street name!" },
        { status: 400 },
      );
    }
    street_name = street_name.trim();

    if (!city) {
      return NextResponse.json({ error: "Invalid city!" }, { status: 400 });
    }
    city = city.trim();

    if (!province) {
      return NextResponse.json({ error: "Invalid province!" }, { status: 400 });
    }
    province = province.trim();

    if (!post_code) {
      return NextResponse.json(
        { error: "Invalid post code!" },
        { status: 400 },
      );
    }
    post_code = post_code.trim();

    if (!country) {
      return NextResponse.json({ error: "Invalid country!" }, { status: 400 });
    }
    country = country.trim();

    await patchUserAddress(
      user_email,
      street_name,
      city,
      province,
      post_code,
      country,
    );

    return NextResponse.json(
      { success: "User address modified successfully!" },
      { status: 200 },
    );
  } catch (error) {
    console.error("Error:", error);
    return NextResponse.json(
      { error: "Server failed to modify user address!" },
      { status: 500 },
    );
  }
}

//Updates the address information for a specific user. If the user's address is not already in the database, it adds a new address and then updates the user's address ID to link to the newly added address.
//Parameters: user_email, street_name, city, province, postal code, and country are Strings.
//Return: None
async function patchUserAddress(
  user_email: any,
  street_name: any,
  city: any,
  province: any,
  post_code: any,
  country: any,
) {
  try {
    const response = await pool.query(
      `INSERT INTO address (street_name, city, province, post_code, country) VALUES ($1, $2, $3, $4, $5) RETURNING address_id;`,
      [street_name, city, province, post_code, country],
    );
    await pool.query(
      `UPDATE userInfo SET address_id = $1 WHERE user_email = $2;`,
      [response.rows[0].address_id, user_email],
    );
  } catch (error) {
    console.error("Error updating user address:", error);
  }
}

// TODO: this db function isn't used anywhere, need to double check where it goes
//Inserts a new address into the database and returns its generated unique ID.
//Parameters:street_name, city, province, post_code, country (Strings)
//Returns: The unique address_id generated by the database for the newly inserted address.
async function postAddress(
  street_name: any,
  city: any,
  province: any,
  post_code: any,
  country: any,
) {
  try {
    const response = await pool.query(
      `INSERT INTO address (street_name, city, province, post_code, country) VALUES ($1, $2, $3, $4, $5) RETURNING address_id;`,
      [street_name, city, province, post_code, country],
    );
    return response.rows[0].address_id;
  } catch (error) {
    console.error("Error adding address:", error);
  }
}
